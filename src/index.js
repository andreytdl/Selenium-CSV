// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const Papa = require('papaparse');
const fs = require('fs');
// const mocha = require('mocha');
const webdriver = require('selenium-webdriver');
const chrome = require('selenium-webdriver/chrome');
const chromedriver = require('chromedriver');

//Caminho para o arquivo
const filePath = './file.csv';

//Obtendo o conteúdo do arquivo
var content = fs.readFileSync(filePath, "utf8");

//Caso queira ver o conteúdo
// console.log(content)

//Convertendo o arquivo
const parsedFile = Papa.parse(content, {
    skipEmptyLines: true,
    header: true,
})

//Verificando a quantidade de itens no arquivo
const fileSize = parsedFile.data.length;

//Função para a pesquisa
async function search(){
  
  //Iterando em todas as linhas do arquivo
  for(let i = 0; i < fileSize; i++){
    //Lendo a coluna "Animais" no arquivo csv
    let animal = parsedFile.data[i]['Animais']

    //printando o dado usado para confirmar
    console.log("Pesquisando ", animal)

    //Realizando a os passos com o Selenium
    await bot(animal);

    //printando o dado usado para confirmar
    console.log("Pesquisa realizada com Sucesso! ")
  }
}

//Bot do selenium em ação
async function bot(search){

  //Estou usando o Chrome, porém você pode usar outros webdrivers para essa ação
  chrome.setDefaultService(new chrome.ServiceBuilder(chromedriver.path).build());
  let driver = new webdriver.Builder()
  .withCapabilities(webdriver.Capabilities.chrome())
  .build();
  
  //---------- Inicio da operação do selenium ----------- //

  //Acessando o google
  await driver.get("https://www.google.com/")
  //Clicando na barra de pesquisa
  await driver.findElement(By.name("q")).click()
  //Digitando o item search passado como parâmetro na função
  await driver.findElement(By.name("q")).sendKeys(search)
  //Pesquisando
  await driver.findElement(By.name("q")).sendKeys(Key.ENTER)
  //Fechando a janela
  await driver.quit();
}



search();
